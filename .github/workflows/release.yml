
name: Release

on:
  release:
    types: [created]
    
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
      env:
        CI: false
        REACT_APP_API_KEY: ${{ secrets.PRODUCTION_REST_ENDPOINT }}
        REACT_APP_TENDERMINT_RPC_ENDPOINT: ${{ secrets.PRODUCTION_RPC_ENDPOINT }}
        REACT_APP_WEBSITE_URL: ${{ secrets.PRODUCTION_WEBSITE_URL }}
        REACT_APP_EXPLORER_API: ${{ secrets.PRODUCTION_EXPLORER }}
        REACT_APP_MAIL_CHIMP_URL: ${{ secrets.PRODUCTION_MAILCHIMP }}
        REACT_APP_PROXY_API: ${{ secrets.PROXY_API }}
        REACT_APP_CHAIN_ID: ${{ secrets.PRODUCTION_CHAIN_ID }}
        REACT_APP_CHAIN_NAME: ${{ secrets.PRODUCTION_CHAIN_NAME }}
        REACT_APP_IBC_CONFIG: ${{ secrets.PRODUCTION_IBC_CONFIG}}
    - name: zip up the build
      uses: montudor/action-zip@v0.1.0
      with:
        args: zip -qq -r build.zip build
    - name: Operations
      uses: alinz/ssh-scp-action@master
      with:
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        host: ${{ secrets.PRODUCTION_HOST }}
        port: 22
        user: ${{ secrets.PRODUCTION_USERNAME }}
        # runs this on remove server
        ssh_before: |
          rm -r build.zip
        # then uploads these 2 files
        scp: |
          build.zip ${{ secrets.PRODUCTION_USERNAME }}@${{ secrets.PRODUCTION_HOST }}:~/build.zip
        # then run these commands
        ssh_after: |
          ${{ secrets.PRODUCTION_UPDATE_SCRIPT }}
